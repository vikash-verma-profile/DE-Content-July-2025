questionTitle,questionType,questionDescription,correctOptionNumbers,positiveMarks,negativeMarks,questionAnswerExplanation,questionOption1,questionOption2,questionOption3,questionOption4
Question 1,single-correct,Which Python data structure provides O(1) average lookup but may degrade to O(n) due to hash collisions?,2,1,0,"Dictionaries use hash tables which allow O(1) average lookups, but in rare cases collisions cause O(n).",List,Dictionary,Set,Tuple
Question 2,single-correct,Which SQL query correctly retrieves the top 2 orders per customer by revenue?,1,1,0,"RANK() OVER (PARTITION BY customer_id ORDER BY revenue DESC) gives rank; filtering rank <= 2 yields top 2 orders per customer.",Use RANK() with PARTITION BY customer_id and ORDER BY revenue DESC,Use DENSE_RANK() with ORDER BY revenue only,Use ROW_NUMBER() OVER (PARTITION BY revenue ORDER BY customer_id),Use NTILE(2) OVER (PARTITION BY customer_id ORDER BY revenue)
Question 3,single-correct,Why is Spark's groupByKey() less efficient than reduceByKey()?,3,1,0,"groupByKey() shuffles all values across the network, while reduceByKey() performs local aggregation first.",It avoids shuffle,It reduces memory pressure,It causes excessive data movement across executors,It guarantees data locality
Question 4,single-correct,Which Delta Lake feature allows adding new columns without rewriting historical data?,4,1,0,"Schema Evolution enables adding columns dynamically; Schema Enforcement prevents incompatible schema changes.",Z-Ordering,Time Travel,Schema Enforcement,Schema Evolution
Question 5,single-correct,Which Python concurrency model is most efficient for I/O-bound tasks?,3,1,0,"asyncio leverages asynchronous event loop, making it best for I/O-bound operations such as API calls.",threading,multiprocessing,asyncio,subprocess
Question 6,single-correct,Which strategy most improves SQL join performance in large datasets?,2,1,0,"Proper indexing on join keys drastically improves join efficiency.",Using CROSS JOIN,Ensuring proper indexing on join keys,Avoiding WHERE clauses,Adding redundant GROUP BY
Question 7,single-correct,Which optimization is NOT performed by Spark Catalyst Optimizer?,4,1,0,"Catalyst performs predicate pushdown, join reordering, and codegen, but not low-level network compression.",Predicate pushdown,Join reordering,Code generation,Network packet compression
Question 8,single-correct,Which Delta Lake command restores a table to a previous version?,1,1,0,"RESTORE TABLE ... TO VERSION AS OF n allows rollback to a previous snapshot.",RESTORE TABLE ... TO VERSION AS OF n,ALTER TABLE ... ROLLBACK,MERGE INTO ... ON,ROLLBACK DELTA TO VERSION n
Question 9,single-correct,What is the primary benefit of using Python generators over lists?,2,1,0,"Generators use lazy evaluation, reducing memory usage for large datasets.",Faster random access,Lazy evaluation reduces memory footprint,They support in-place modification,They automatically parallelize computation
Question 10,single-correct,Which Spark optimization prunes unused columns before executing transformations?,1,1,0,"Column Pruning eliminates unnecessary columns early in execution plan, improving performance.",Column Pruning,Adaptive Query Execution,Z-Ordering,Whole-stage Codegen
